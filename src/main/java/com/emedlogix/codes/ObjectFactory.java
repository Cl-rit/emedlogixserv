//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.07.13 at 09:59:40 PM IST 
//


package com.emedlogix.codes;

import javax.xml.namespace.QName;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.emedlogix.codes package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Version_QNAME = new QName("", "version");
    private final static QName _Title_QNAME = new QName("", "title");
    private final static QName _Name_QNAME = new QName("", "name");
    private final static QName _Desc_QNAME = new QName("", "desc");
    private final static QName _Note_QNAME = new QName("", "note");
    private final static QName _Diff_QNAME = new QName("", "diff");
    private final static QName _InclusionTerm_QNAME = new QName("", "inclusionTerm");
    private final static QName _SevenChrNote_QNAME = new QName("", "sevenChrNote");
    private final static QName _Includes_QNAME = new QName("", "includes");
    private final static QName _Excludes1_QNAME = new QName("", "excludes1");
    private final static QName _Excludes2_QNAME = new QName("", "excludes2");
    private final static QName _CodeFirst_QNAME = new QName("", "codeFirst");
    private final static QName _UseAdditionalCode_QNAME = new QName("", "useAdditionalCode");
    private final static QName _CodeAlso_QNAME = new QName("", "codeAlso");
    private final static QName _Notes_QNAME = new QName("", "notes");
    private final static QName _Instruction_QNAME = new QName("", "instruction");
    private final static QName _Extension_QNAME = new QName("", "extension");
    private final static QName _SevenChrDef_QNAME = new QName("", "sevenChrDef");
    private final static QName _Diag_QNAME = new QName("", "diag");
    private final static QName _Deactivated_QNAME = new QName("", "deactivated");
    private final static QName _Section_QNAME = new QName("", "section");
    private final static QName _SectionIndex_QNAME = new QName("", "sectionIndex");
    private final static QName _Chapter_QNAME = new QName("", "chapter");
    private final static QName _VisualImpairment_QNAME = new QName("", "visualImpairment");
    private final static QName _IntroSection_QNAME = new QName("", "introSection");
    private final static QName _Introduction_QNAME = new QName("", "introduction");
    private final static QName _ContentTypeNew_QNAME = new QName("", "new");
    private final static QName _ContentTypeOld_QNAME = new QName("", "old");
    private final static QName _ContentTypeUnc_QNAME = new QName("", "unc");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.emedlogix.codes
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link VisualImpairmentType }
     * 
     */
    public VisualImpairmentType createVisualImpairmentType() {
        return new VisualImpairmentType();
    }

    /**
     * Create an instance of {@link VisualImpairmentType.VisCategory }
     * 
     */
    public VisualImpairmentType.VisCategory createVisualImpairmentTypeVisCategory() {
        return new VisualImpairmentType.VisCategory();
    }

    /**
     * Create an instance of {@link SectionIndexType }
     * 
     */
    public SectionIndexType createSectionIndexType() {
        return new SectionIndexType();
    }

    /**
     * Create an instance of {@link ContentType }
     * 
     */
    public ContentType createContentType() {
        return new ContentType();
    }

    /**
     * Create an instance of {@link NoteType }
     * 
     */
    public NoteType createNoteType() {
        return new NoteType();
    }

    /**
     * Create an instance of {@link ExtensionType }
     * 
     */
    public ExtensionType createExtensionType() {
        return new ExtensionType();
    }

    /**
     * Create an instance of {@link SevenChrDefType }
     * 
     */
    public SevenChrDefType createSevenChrDefType() {
        return new SevenChrDefType();
    }

    /**
     * Create an instance of {@link DiagnosisType }
     * 
     */
    public DiagnosisType createDiagnosisType() {
        return new DiagnosisType();
    }

    /**
     * Create an instance of {@link DeactivatedType }
     * 
     */
    public DeactivatedType createDeactivatedType() {
        return new DeactivatedType();
    }

    /**
     * Create an instance of {@link SectionType }
     * 
     */
    public SectionType createSectionType() {
        return new SectionType();
    }

    /**
     * Create an instance of {@link ChapterType }
     * 
     */
    public ChapterType createChapterType() {
        return new ChapterType();
    }

    /**
     * Create an instance of {@link IntroSectionType }
     * 
     */
    public IntroSectionType createIntroSectionType() {
        return new IntroSectionType();
    }

    /**
     * Create an instance of {@link IntroductionType }
     * 
     */
    public IntroductionType createIntroductionType() {
        return new IntroductionType();
    }

    /**
     * Create an instance of {@link ICD10CMTabular }
     * 
     */
    public ICD10CMTabular createICD10CMTabular() {
        return new ICD10CMTabular();
    }

    /**
     * Create an instance of {@link ValueType }
     * 
     */
    public ValueType createValueType() {
        return new ValueType();
    }

    /**
     * Create an instance of {@link VisualImpairmentType.VisCategory.VisRange }
     * 
     */
    public VisualImpairmentType.VisCategory.VisRange createVisualImpairmentTypeVisCategoryVisRange() {
        return new VisualImpairmentType.VisCategory.VisRange();
    }

    /**
     * Create an instance of {@link SectionIndexType.SectionRef }
     * 
     */
    public SectionIndexType.SectionRef createSectionIndexTypeSectionRef() {
        return new SectionIndexType.SectionRef();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "version")
    public JAXBElement<ContentType> createVersion(ContentType value) {
        return new JAXBElement<ContentType>(_Version_QNAME, ContentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "title")
    public JAXBElement<ContentType> createTitle(ContentType value) {
        return new JAXBElement<ContentType>(_Title_QNAME, ContentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "name")
    public JAXBElement<ContentType> createName(ContentType value) {
        return new JAXBElement<ContentType>(_Name_QNAME, ContentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "desc")
    public JAXBElement<ContentType> createDesc(ContentType value) {
        return new JAXBElement<ContentType>(_Desc_QNAME, ContentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "note")
    public JAXBElement<ContentType> createNote(ContentType value) {
        return new JAXBElement<ContentType>(_Note_QNAME, ContentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "diff")
    public JAXBElement<ContentType> createDiff(ContentType value) {
        return new JAXBElement<ContentType>(_Diff_QNAME, ContentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "inclusionTerm")
    public JAXBElement<NoteType> createInclusionTerm(NoteType value) {
        return new JAXBElement<NoteType>(_InclusionTerm_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "sevenChrNote")
    public JAXBElement<NoteType> createSevenChrNote(NoteType value) {
        return new JAXBElement<NoteType>(_SevenChrNote_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "includes")
    public JAXBElement<NoteType> createIncludes(NoteType value) {
        return new JAXBElement<NoteType>(_Includes_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "excludes1")
    public JAXBElement<NoteType> createExcludes1(NoteType value) {
        return new JAXBElement<NoteType>(_Excludes1_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "excludes2")
    public JAXBElement<NoteType> createExcludes2(NoteType value) {
        return new JAXBElement<NoteType>(_Excludes2_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "codeFirst")
    public JAXBElement<NoteType> createCodeFirst(NoteType value) {
        return new JAXBElement<NoteType>(_CodeFirst_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "useAdditionalCode")
    public JAXBElement<NoteType> createUseAdditionalCode(NoteType value) {
        return new JAXBElement<NoteType>(_UseAdditionalCode_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "codeAlso")
    public JAXBElement<NoteType> createCodeAlso(NoteType value) {
        return new JAXBElement<NoteType>(_CodeAlso_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "notes")
    public JAXBElement<NoteType> createNotes(NoteType value) {
        return new JAXBElement<NoteType>(_Notes_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "instruction")
    public JAXBElement<NoteType> createInstruction(NoteType value) {
        return new JAXBElement<NoteType>(_Instruction_QNAME, NoteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtensionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ExtensionType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "extension")
    public JAXBElement<ExtensionType> createExtension(ExtensionType value) {
        return new JAXBElement<ExtensionType>(_Extension_QNAME, ExtensionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SevenChrDefType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SevenChrDefType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "sevenChrDef")
    public JAXBElement<SevenChrDefType> createSevenChrDef(SevenChrDefType value) {
        return new JAXBElement<SevenChrDefType>(_SevenChrDef_QNAME, SevenChrDefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DiagnosisType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DiagnosisType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "diag")
    public JAXBElement<DiagnosisType> createDiag(DiagnosisType value) {
        return new JAXBElement<DiagnosisType>(_Diag_QNAME, DiagnosisType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DeactivatedType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DeactivatedType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "deactivated")
    public JAXBElement<DeactivatedType> createDeactivated(DeactivatedType value) {
        return new JAXBElement<DeactivatedType>(_Deactivated_QNAME, DeactivatedType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SectionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SectionType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "section")
    public JAXBElement<SectionType> createSection(SectionType value) {
        return new JAXBElement<SectionType>(_Section_QNAME, SectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SectionIndexType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SectionIndexType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "sectionIndex")
    public JAXBElement<SectionIndexType> createSectionIndex(SectionIndexType value) {
        return new JAXBElement<SectionIndexType>(_SectionIndex_QNAME, SectionIndexType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChapterType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ChapterType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "chapter")
    public JAXBElement<ChapterType> createChapter(ChapterType value) {
        return new JAXBElement<ChapterType>(_Chapter_QNAME, ChapterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VisualImpairmentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link VisualImpairmentType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "visualImpairment")
    public JAXBElement<VisualImpairmentType> createVisualImpairment(VisualImpairmentType value) {
        return new JAXBElement<VisualImpairmentType>(_VisualImpairment_QNAME, VisualImpairmentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntroSectionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link IntroSectionType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "introSection")
    public JAXBElement<IntroSectionType> createIntroSection(IntroSectionType value) {
        return new JAXBElement<IntroSectionType>(_IntroSection_QNAME, IntroSectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntroductionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link IntroductionType }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "introduction")
    public JAXBElement<IntroductionType> createIntroduction(IntroductionType value) {
        return new JAXBElement<IntroductionType>(_Introduction_QNAME, IntroductionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "new", scope = ContentType.class)
    public JAXBElement<String> createContentTypeNew(String value) {
        return new JAXBElement<String>(_ContentTypeNew_QNAME, String.class, ContentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "old", scope = ContentType.class)
    public JAXBElement<String> createContentTypeOld(String value) {
        return new JAXBElement<String>(_ContentTypeOld_QNAME, String.class, ContentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "unc", scope = ContentType.class)
    public JAXBElement<String> createContentTypeUnc(String value) {
        return new JAXBElement<String>(_ContentTypeUnc_QNAME, String.class, ContentType.class, value);
    }

}
